name: Build ompzowe/explorer-jes
on:
  # push:
  # pull_request:
  workflow_dispatch:
    inputs:
      release:
        description: 'Set to "true" if we want to release the images'
        required: false
        default: ''
      RANDOM_DISPATCH_EVENT_ID:
        description: 'random dispatch event id'
        required: false
        type: string
env:
  IMAGE_BASE_DIR: container

jobs:
  display-dispatch-event-id:
    if: github.event.inputs.RANDOM_DISPATCH_EVENT_ID != ''
    runs-on: ubuntu-latest
    steps:
      - name: RANDOM_DISPATCH_EVENT_ID is ${{ github.event.inputs.RANDOM_DISPATCH_EVENT_ID }}
        run: echo "prints random dispatch event id sent from workflow dispatch event"

  build-ubuntu-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - name: '[Build] Nodejs project build'
        run: npm run prod

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubuntu
          cpu-arch: amd64

      - uses: zowe-actions/shared-actions/docker-build-local@main
        with:
          build-arg-list: ZOWE_BASE_IMAGE=latest-ubuntu
        timeout-minutes: 5

  build-ubuntu-s390x:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - name: '[Build] Nodejs project build'
        run: npm run prod

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubuntu
          cpu-arch: s390x

      - uses: zowe-actions/shared-actions/docker-build-zlinux@main
        with:
          zlinux-host: ${{ secrets.ZLINUX_HOST }}
          zlinux-ssh-user: ${{ secrets.ZLINUX_SSH_USER }}
          zlinux-ssh-key: ${{ secrets.ZLINUX_SSH_KEY }}
          zlinux-ssh-passphrase: ${{ secrets.ZLINUX_SSH_PASSPHRASE }}
          build-arg-list: ZOWE_BASE_IMAGE=latest-ubuntu
        timeout-minutes: 10

  define-ubuntu-manifest:
    needs:
      - build-ubuntu-amd64
      - build-ubuntu-s390x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubuntu

      - uses: zowe-actions/shared-actions/docker-manifest@main
        with:
          linux-distro: ubuntu
          cpu-arch-list: "amd64 s390x"
        timeout-minutes: 2

  build-ubi-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - name: '[Build] Nodejs project build'
        run: npm run prod

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubi
          cpu-arch: amd64
          redhat-registry: ${{ env.DEFAULT_REDHAT_DOCKER_REGISTRY }}
          redhat-registry-user: ${{ secrets.REDHAT_DEVELOPER_USER }}
          redhat-registry-password: ${{ secrets.REDHAT_DEVELOPER_PASSWORD }}

      - uses: zowe-actions/shared-actions/docker-build-local@main
        with:
          build-arg-list: ZOWE_BASE_IMAGE=latest-ubi
        timeout-minutes: 5

  build-ubi-s390x:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - name: '[Build] Nodejs project build'
        run: npm run prod

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubi
          cpu-arch: s390x

      - uses: zowe-actions/shared-actions/docker-build-zlinux@main
        with:
          zlinux-host: ${{ secrets.ZLINUX_HOST }}
          zlinux-ssh-user: ${{ secrets.ZLINUX_SSH_USER }}
          zlinux-ssh-key: ${{ secrets.ZLINUX_SSH_KEY }}
          zlinux-ssh-passphrase: ${{ secrets.ZLINUX_SSH_PASSPHRASE }}
          redhat-registry: ${{ env.DEFAULT_REDHAT_DOCKER_REGISTRY }}
          redhat-registry-user: ${{ secrets.REDHAT_DEVELOPER_USER }}
          redhat-registry-password: ${{ secrets.REDHAT_DEVELOPER_PASSWORD }}
          build-arg-list: ZOWE_BASE_IMAGE=latest-ubi
        timeout-minutes: 10

  define-ubi-manifest:
    needs:
      - build-ubi-amd64
      - build-ubi-s390x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: zowe-actions/shared-actions/prepare-workflow@main

      - uses: actions/setup-node@v2
        with:
          node-version: 10.18.1

      - name: '[Setup] NodeJS project setup'
        uses: zowe-actions/nodejs-actions/setup@main
        with:
          package-name: 'org.zowe.explorer-jes'

      - uses: zowe-actions/shared-actions/docker-prepare@main
        with:
          registry-user: ${{ secrets.ARTIFACTORY_X_USERNAME }}
          registry-password: ${{ secrets.ARTIFACTORY_X_PASSWORD }}
          release: ${{ github.event.inputs.release }}
          base-directory: ${{ env.IMAGE_BASE_DIR }}
          image-name: explorer-jes
          linux-distro: ubi

      - uses: zowe-actions/shared-actions/docker-manifest@main
        with:
          linux-distro: ubi
          cpu-arch-list: "amd64 s390x"
        timeout-minutes: 2